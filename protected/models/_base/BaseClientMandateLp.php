<?php

/**
 * This is the model base class for the table "client_mandate_lp".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ClientMandateLp".
 *
 * Columns in table "client_mandate_lp" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $client_mandate_id
 * @property integer $status_id
 * @property integer $lp_id
 *
 */
abstract class BaseClientMandateLp extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'client_mandate_lp';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ClientMandateLp|ClientMandateLps', $n);
	}

	public static function representingColumn() {
		return array(
			'client_mandate_id',
			'lp_id',
		);
	}

	public function rules() {
		return array(
			array('client_mandate_id, lp_id', 'required'),
			array('client_mandate_id, status_id, lp_id', 'numerical', 'integerOnly'=>true),
			array('status_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('client_mandate_id, status_id, lp_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
            'lp' => array(self::BELONGS_TO, 'Lp', 'lp_id'),
            'status' => array(self::BELONGS_TO, 'Status', 'status_id'),
            'client_mandate' => array(self::BELONGS_TO, 'ClientMandate', 'client_mandate_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'client_mandate_id' => Yii::t('app', 'Client Mandate'),
			'status_id' => Yii::t('app', 'Status'),
			'lp_id' => Yii::t('app', 'Lp'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('client_mandate_id', $this->client_mandate_id);
		$criteria->compare('status_id', $this->status_id);
		$criteria->compare('lp_id', $this->lp_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
